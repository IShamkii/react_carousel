{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","useState","position","setPosition","imgPosition","setImgPosition","maxPosition","length","boundary","useEffect","newPosition","Math","max","className","style","transition","width","height","left","map","img","listStyle","src","alt","onClick","currentImg","type","min","App","state","handleInputStep","event","value","parseInt","target","setState","handleInputWidth","handleInputFrameSize","handleInputAnimationDuration","this","name","defaultValue","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7831c512.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Carousel.scss';\n\ninterface CarouselProps {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n}\n\nconst Carousel: React.FC<CarouselProps> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n}) => {\n  const [position, setPosition] = useState(0);\n  const [imgPosition, setImgPosition] = useState(0);\n  const maxPosition = images.length - frameSize;\n  const boundary = (itemWidth * images.length) - (frameSize * itemWidth);\n\n  const moveRight = () => {\n    if (imgPosition !== maxPosition) {\n      setImgPosition(currentImg => Math.min(currentImg + step, maxPosition));\n    }\n  };\n\n  const moveLeft = () => {\n    if (imgPosition !== 0) {\n      setImgPosition(currentImg => Math.max(currentImg - step, 0));\n    }\n  };\n\n  useEffect(() => {\n    setPosition(() => {\n      const newPosition = itemWidth * imgPosition;\n\n      return Math.max(-newPosition, -boundary);\n    });\n  }, [itemWidth, imgPosition, frameSize, boundary]);\n\n  useEffect(() => {\n    if (maxPosition < imgPosition) {\n      setImgPosition(maxPosition);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [maxPosition]);\n\n  return (\n    <>\n      <div\n        className=\"Carousel\"\n        style={{\n          transition: `all ${animationDuration}ms ease`,\n        }}\n      >\n        <div\n          className=\"Carousel__list-wrapper\"\n          style={{\n            width: frameSize * itemWidth,\n            height: itemWidth,\n            transition: `all ${animationDuration}ms ease`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              left: `${position}px`,\n              transition: `left ${animationDuration}ms ease`,\n            }}\n          >\n            {images.map(img => (\n              <li\n                className=\"Carousel__list-img\"\n                key={img}\n                style={{ listStyle: 'none' }}\n              >\n                <img\n                  src={img}\n                  alt={img}\n                  width={itemWidth}\n                  style={{ transition: `width ${animationDuration}ms ease` }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Carousel__button-wrapper\">\n        <button\n          onClick={moveLeft}\n          className=\"Carousel__button\"\n          data-cy=\"prev\"\n          type=\"button\"\n        >\n          Prev\n        </button>\n\n        <button\n          onClick={moveRight}\n          className=\"Carousel__button\"\n          data-cy=\"next\"\n          type=\"button\"\n        >\n          Next\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  itemWidth: number;\n  frameSize: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    itemWidth: 130,\n    frameSize: 3,\n    animationDuration: 1000,\n  };\n\n  handleInputStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(event.target.value, 10);\n\n    this.setState({ step: value });\n  };\n\n  handleInputWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(event.target.value, 10);\n\n    this.setState({ itemWidth: value });\n  };\n\n  handleInputFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(event.target.value, 10);\n\n    this.setState({ frameSize: value });\n  };\n\n  handleInputAnimationDuration = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const value = parseInt(event.target.value, 10);\n\n    this.setState({ animationDuration: value });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\" data-cy=\"title\">\n          {/* eslint-disable-next-line */}\n          Carousel with {images.length} images\n        </h1>\n\n        <div className=\"App__inputs inputs\">\n          <div className=\"input-block\">\n            <span>Step:&nbsp;</span>\n            <input\n              className=\"input\"\n              type=\"number\"\n              name=\"step\"\n              min={1}\n              max={10}\n              defaultValue={step}\n              onChange={this.handleInputStep}\n            />\n          </div>\n\n          <div className=\"input-block\">\n            <span>Frame size:&nbsp;</span>\n            <input\n              className=\"input\"\n              type=\"number\"\n              name=\"frameSize\"\n              min={1}\n              max={10}\n              defaultValue={frameSize}\n              onChange={this.handleInputFrameSize}\n            />\n          </div>\n\n          <div className=\"input-block\">\n            <span>Item width:&nbsp;</span>\n            <input\n              className=\"input\"\n              type=\"number\"\n              name=\"itemWidth\"\n              step={10}\n              min={50}\n              defaultValue={itemWidth}\n              onChange={this.handleInputWidth}\n            />\n          </div>\n\n          <div className=\"input-block\">\n            <span>Animation duration:&nbsp;</span>\n            <input\n              className=\"input\"\n              type=\"number\"\n              name=\"animationDuration\"\n              step={100}\n              defaultValue={animationDuration}\n              onChange={this.handleInputAnimationDuration}\n            />\n          </div>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}